{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"gpu","dataSources":[{"sourceId":2280,"sourceType":"datasetVersion","datasetId":1272}],"dockerImageVersionId":30747,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# In this tutorial, I implemented the building blocks of Federated Learning (FL) and trained one from scratch on the MNIST digit data set","metadata":{}},{"cell_type":"markdown","source":"Quality data exist as islands on edge devices like mobile phones and personal computers across the globe and are guarded by strict privacy preserving laws. Federated Learning provides a clever means of connecting machine learning models to these disjointed data regardless of their locations, and more importantly, without breaching privacy laws. Rather than taking the data to the model for training as per rule of thumb, FL takes the model to the data instead. All that’s needed is the wiliness of the device hosting the data to commit it’s self to the federation process.","metadata":{}},{"cell_type":"markdown","source":"![](https://miro.medium.com/v2/resize:fit:1400/format:webp/1*PmWHMpjKOtxjXa5yTgb93g.jpeg)","metadata":{}},{"cell_type":"markdown","source":" The FL architecture in it’s basic form consists of a curator or server that sits at its centre and coordinates the training activities. Clients are mainly edge devices which could run into millions in number. These devices communicate at least twice with the server per training iteration. To start with, they each receive the current global model’s weights from the server, train it on each of their local data to generate updated parameters which are then uploaded back to the server for aggregation. This cycle of communication persists until a pre-set epoch number or an accuracy condition is reached. In the Federated Averaging Algorithm, aggregation simply means an averaging operation. That is all there is to the training of a FL model. I hope you caught the most salient point in the process — rather than moving raw data around, we now communicate model weights.","metadata":{}},{"cell_type":"markdown","source":"![image.png](attachment:2f85c5d0-0364-4b33-a6a0-c729e567c8ee.png)![image.png](attachment:1a7b5f9e-4282-4765-8f1c-edbd420b79f8.png)","metadata":{},"attachments":{"2f85c5d0-0364-4b33-a6a0-c729e567c8ee.png":{"image/png":""},"1a7b5f9e-4282-4765-8f1c-edbd420b79f8.png":{"image/png":""}}},{"cell_type":"markdown","source":"Now that we are clear on what FL is and how it work, let’s move on to building one from scratch in Tensorflow and training it on the MNIST data set from Kaggle. Please note that this tutorial is for illustration only. We will neither go into the details of how the server-client communication works in FL nor the rudiments of secure aggregation. Since this is a simulation, clients will merely be represented by data shards and all local models will be trained on the same machine.","metadata":{}},{"cell_type":"markdown","source":"# Import all relevant packages\nDon’t worry, I will provide details for each of the imported modules at the point of instantiating their respective objects.","metadata":{}},{"cell_type":"code","source":"pip install imutils\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:16:03.912781Z","iopub.execute_input":"2024-08-04T05:16:03.913742Z","iopub.status.idle":"2024-08-04T05:16:15.933680Z","shell.execute_reply.started":"2024-08-04T05:16:03.913712Z","shell.execute_reply":"2024-08-04T05:16:15.932388Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stderr","text":"/opt/conda/lib/python3.10/pty.py:89: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.\n  pid, fd = os.forkpty()\n","output_type":"stream"},{"name":"stdout","text":"Requirement already satisfied: imutils in /opt/conda/lib/python3.10/site-packages (0.5.4)\nNote: you may need to restart the kernel to use updated packages.\n","output_type":"stream"}]},{"cell_type":"code","source":"\nimport numpy as np\nimport random\nimport cv2\nimport os\nfrom imutils import paths\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.metrics import accuracy_score\n\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import MaxPooling2D\nfrom tensorflow.keras.layers import Activation\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras import backend as K\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:18:17.272354Z","iopub.execute_input":"2024-08-04T05:18:17.273328Z","iopub.status.idle":"2024-08-04T05:18:17.280674Z","shell.execute_reply.started":"2024-08-04T05:18:17.273291Z","shell.execute_reply":"2024-08-04T05:18:17.279675Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":"# from fl_mnist_implementation_tutorial_utils import *\n","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport random\nimport cv2\nimport os\nfrom imutils import paths\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelBinarizer\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.utils import shuffle\nfrom sklearn.metrics import accuracy_score\n\nimport tensorflow as tf\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import MaxPooling2D\nfrom tensorflow.keras.layers import Activation\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\nfrom tensorflow.keras.optimizers import SGD\nfrom tensorflow.keras import backend as K\n\n\n\ndef load(paths, verbose=-1):\n    '''expects images for each class in seperate dir, \n    e.g all digits in 0 class in the directory named 0 '''\n    data = list()\n    labels = list()\n    # loop over the input images\n    for (i, imgpath) in enumerate(paths):\n        # load the image and extract the class labels\n        im_gray = cv2.imread(imgpath, cv2.IMREAD_GRAYSCALE)\n        image = np.array(im_gray).flatten()\n        label = imgpath.split(os.path.sep)[-2]\n        # scale the image to [0, 1] and add to list\n        data.append(image/255)\n        labels.append(label)\n        # show an update every `verbose` images\n        if verbose > 0 and i > 0 and (i + 1) % verbose == 0:\n            print(\"[INFO] processed {}/{}\".format(i + 1, len(paths)))\n    # return a tuple of the data and labels\n    return data, labels\n\n\ndef create_clients(image_list, label_list, num_clients=10, initial='clients'):\n    ''' return: a dictionary with keys clients' names and value as \n                data shards - tuple of images and label lists.\n        args: \n            image_list: a list of numpy arrays of training images\n            label_list:a list of binarized labels for each image\n            num_client: number of fedrated members (clients)\n            initials: the clients'name prefix, e.g, clients_1 \n            \n    '''\n\n    #create a list of client names\n    client_names = ['{}_{}'.format(initial, i+1) for i in range(num_clients)]\n\n    #randomize the data\n    data = list(zip(image_list, label_list))\n    random.shuffle(data)\n\n    #shard data and place at each client\n    size = len(data)//num_clients\n    shards = [data[i:i + size] for i in range(0, size*num_clients, size)]\n\n    #number of clients must equal number of shards\n    assert(len(shards) == len(client_names))\n\n    return {client_names[i] : shards[i] for i in range(len(client_names))}\n\n\n\ndef batch_data(data_shard, bs=32):\n    '''Takes in a clients data shard and create a tfds object off it\n    args:\n        shard: a data, label constituting a client's data shard\n        bs:batch size\n    return:\n        tfds object'''\n    #seperate shard into data and labels lists\n    data, label = zip(*data_shard)\n    dataset = tf.data.Dataset.from_tensor_slices((list(data), list(label)))\n    return dataset.shuffle(len(label)).batch(bs)\n\n\nclass SimpleMLP:\n    @staticmethod\n    def build(shape, classes):\n        model = Sequential()\n        model.add(Dense(200, input_shape=(shape,)))\n        model.add(Activation(\"relu\"))\n        model.add(Dense(200))\n        model.add(Activation(\"relu\"))\n        model.add(Dense(classes))\n        model.add(Activation(\"softmax\"))\n        return model\n    \n\ndef weight_scalling_factor(clients_trn_data, client_name):\n    client_names = list(clients_trn_data.keys())\n    #get the bs\n    bs = list(clients_trn_data[client_name])[0][0].shape[0]\n    #first calculate the total training data points across clinets\n    global_count = sum([tf.data.experimental.cardinality(clients_trn_data[client_name]).numpy() for client_name in client_names])*bs\n    # get the total number of data points held by a client\n    local_count = tf.data.experimental.cardinality(clients_trn_data[client_name]).numpy()*bs\n    return local_count/global_count\n\n\ndef scale_model_weights(weight, scalar):\n    '''function for scaling a models weights'''\n    weight_final = []\n    steps = len(weight)\n    for i in range(steps):\n        weight_final.append(scalar * weight[i])\n    return weight_final\n\n\n\ndef sum_scaled_weights(scaled_weight_list):\n    '''Return the sum of the listed scaled weights. The is equivalent to scaled avg of the weights'''\n    avg_grad = list()\n    #get the average grad accross all client gradients\n    for grad_list_tuple in zip(*scaled_weight_list):\n        layer_mean = tf.math.reduce_sum(grad_list_tuple, axis=0)\n        avg_grad.append(layer_mean)\n        \n    return avg_grad\n\n\ndef test_model(X_test, Y_test,  model, comm_round):\n    cce = tf.keras.losses.CategoricalCrossentropy(from_logits=True)\n    #logits = model.predict(X_test, batch_size=100)\n    logits = model.predict(X_test)\n    loss = cce(Y_test, logits)\n    acc = accuracy_score(tf.argmax(logits, axis=1), tf.argmax(Y_test, axis=1))\n    print('comm_round: {} | global_acc: {:.3%} | global_loss: {}'.format(comm_round, acc, loss))\n    return acc, loss","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:18:23.969562Z","iopub.execute_input":"2024-08-04T05:18:23.970378Z","iopub.status.idle":"2024-08-04T05:18:23.993586Z","shell.execute_reply.started":"2024-08-04T05:18:23.970345Z","shell.execute_reply":"2024-08-04T05:18:23.992644Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":"# Reading and preprocessing MNIST data set\n","metadata":{}},{"cell_type":"markdown","source":"I’m using the jpeg version of MNIST data set from here. It consists of 42000 digit images with each class kept in separate folder. I will load the data into memory using this code snippet and keep 10% of the data for testing the trained global model later on.","metadata":{}},{"cell_type":"code","source":"def load(paths, verbose=-1):\n    '''expects images for each class in seperate dir, \n    e.g all digits in 0 class in the directory named 0 '''\n    data = list()\n    labels = list()\n    # loop over the input images\n    for (i, imgpath) in enumerate(paths):\n        # load the image and extract the class labels\n        im_gray = cv2.imread(imgpath, cv2.IMREAD_GRAYSCALE)\n        image = np.array(im_gray).flatten()\n        label = imgpath.split(os.path.sep)[-2]\n        # scale the image to [0, 1] and add to list\n        data.append(image/255)\n        labels.append(label)\n        # show an update every `verbose` images\n        if verbose > 0 and i > 0 and (i + 1) % verbose == 0:\n            print(\"[INFO] processed {}/{}\".format(i + 1, len(paths)))\n    # return a tuple of the data and labels\n    return data, labels\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:18:29.464498Z","iopub.execute_input":"2024-08-04T05:18:29.465177Z","iopub.status.idle":"2024-08-04T05:18:29.471931Z","shell.execute_reply.started":"2024-08-04T05:18:29.465144Z","shell.execute_reply":"2024-08-04T05:18:29.470968Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":"On line 9, each image will be read from disk as grey scale and then flattened. The flattening step is import because we will be using a MLP network architecture later on. To obtain the class label of an image, we split its path string on line 11. Hope you noticed we also scaled the image to [0, 1] on line 13 to douse the impact of varying pixel brightness.\n\n","metadata":{}},{"cell_type":"markdown","source":"# Creating train-test split\n","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"img_path = '/kaggle/input/mnistasjpg/trainingSample/trainingSample'\nimage_paths = list(paths.list_images(img_path))\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:23:51.963924Z","iopub.execute_input":"2024-08-04T05:23:51.964563Z","iopub.status.idle":"2024-08-04T05:23:51.977851Z","shell.execute_reply.started":"2024-08-04T05:23:51.964530Z","shell.execute_reply":"2024-08-04T05:23:51.977000Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"#declear path to your mnist data folder\n\n#get the path list using the path object\nimage_paths = list(paths.list_images(img_path))\n\n#apply our function\nimage_list, label_list = load(image_paths, verbose=10000)\n\n#binarize the labels\nlb = LabelBinarizer()\nlabel_list = lb.fit_transform(label_list)\n\n#split data into training and test set\nX_train, X_test, y_train, y_test = train_test_split(image_list, \n                                                    label_list, \n                                                    test_size=0.1, \n                                                    random_state=42)\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:24:02.112297Z","iopub.execute_input":"2024-08-04T05:24:02.113046Z","iopub.status.idle":"2024-08-04T05:24:03.832548Z","shell.execute_reply.started":"2024-08-04T05:24:02.113015Z","shell.execute_reply":"2024-08-04T05:24:03.831862Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":"# Federated Members (clients) as Data Shards \nIn the real world implementation of FL, each federated member will have its own data coupled with it in isolation. Remember the aim of FL is to ship models to data and not the other way around. The shard creation step here only happens in experiments. I will share the training set into 10 shards, one per client. I wrote a function called create_clients to achieve this.","metadata":{}},{"cell_type":"code","source":"def create_clients(image_list, label_list, num_clients=10, initial='clients'):\n    ''' return: a dictionary with keys clients' names and value as \n                data shards - tuple of images and label lists.\n        args: \n            image_list: a list of numpy arrays of training images\n            label_list:a list of binarized labels for each image\n            num_client: number of fedrated members (clients)\n            initials: the clients'name prefix, e.g, clients_1 \n            \n    '''\n\n    #create a list of client names\n    client_names = ['{}_{}'.format(initial, i+1) for i in range(num_clients)]\n\n    #randomize the data\n    data = list(zip(image_list, label_list))\n    random.shuffle(data)\n\n    #shard data and place at each client\n    size = len(data)//num_clients\n    shards = [data[i:i + size] for i in range(0, size*num_clients, size)]\n\n    #number of clients must equal number of shards\n    assert(len(shards) == len(client_names))\n\n    return {client_names[i] : shards[i] for i in range(len(client_names))} ","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:27:27.834063Z","iopub.execute_input":"2024-08-04T05:27:27.835014Z","iopub.status.idle":"2024-08-04T05:27:27.842455Z","shell.execute_reply.started":"2024-08-04T05:27:27.834983Z","shell.execute_reply":"2024-08-04T05:27:27.841330Z"},"trusted":true},"execution_count":14,"outputs":[]},{"cell_type":"code","source":"\n#create clients\nclients = create_clients(X_train, y_train, num_clients=10, initial='client')","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:27:31.700368Z","iopub.execute_input":"2024-08-04T05:27:31.700764Z","iopub.status.idle":"2024-08-04T05:27:31.706109Z","shell.execute_reply.started":"2024-08-04T05:27:31.700734Z","shell.execute_reply":"2024-08-04T05:27:31.705155Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"markdown","source":"# Processing and batching clients’ and test data\nNext is to process each of the client’s data into tensorflow data set and batch them. To simplify this step and avoid repetition, I encapsulated the procedure into a small function named batch_data.","metadata":{}},{"cell_type":"code","source":"\ndef batch_data(data_shard, bs=32):\n    '''Takes in a clients data shard and create a tfds object off it\n    args:\n        shard: a data, label constituting a client's data shard\n        bs:batch size\n    return:\n        tfds object'''\n    #seperate shard into data and labels lists\n    data, label = zip(*data_shard)\n    dataset = tf.data.Dataset.from_tensor_slices((list(data), list(label)))\n    return dataset.shuffle(len(label)).batch(bs)","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:27:34.774089Z","iopub.execute_input":"2024-08-04T05:27:34.774956Z","iopub.status.idle":"2024-08-04T05:27:34.780071Z","shell.execute_reply.started":"2024-08-04T05:27:34.774909Z","shell.execute_reply":"2024-08-04T05:27:34.779184Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":"While applying this function below, I will process the test set as well and keep it aside for later use.\n\n","metadata":{}},{"cell_type":"code","source":"clients_batched = dict()\n\n#process and batch the training data for each client\nclients_batched = dict()\nfor (client_name, data) in clients.items():\n    clients_batched[client_name] = batch_data(data)\n    \n#process and batch the test set  \ntest_batched = tf.data.Dataset.from_tensor_slices((X_test, y_test)).batch(len(y_test))","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:27:38.595096Z","iopub.execute_input":"2024-08-04T05:27:38.595947Z","iopub.status.idle":"2024-08-04T05:27:39.387853Z","shell.execute_reply.started":"2024-08-04T05:27:38.595890Z","shell.execute_reply":"2024-08-04T05:27:39.386979Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":"# Creating the Multi Layer Perceptron (MLP) model\nOne thing I didn't mention in the introduction section is that FL is mostly suited for parameterized learning — all types of neural networks. Machine learning techniques such as KNN or it likes that merely store training data while learning might not benefit from FL. I’m creating a 3-layer MLP to serve as the model for our classification task. I hope you still remember all those Keras modules we imported earlier, this is where they fit in.\n\n","metadata":{}},{"cell_type":"code","source":"class SimpleMLP:\n    @staticmethod\n    def build(shape, classes):\n        model = Sequential()\n        model.add(Dense(200, input_shape=(shape,)))\n        model.add(Activation(\"relu\"))\n        model.add(Dense(200))\n        model.add(Activation(\"relu\"))\n        model.add(Dense(classes))\n        model.add(Activation(\"softmax\"))\n        return model","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:35:02.089416Z","iopub.execute_input":"2024-08-04T05:35:02.090242Z","iopub.status.idle":"2024-08-04T05:35:02.096725Z","shell.execute_reply.started":"2024-08-04T05:35:02.090207Z","shell.execute_reply":"2024-08-04T05:35:02.095741Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":"To build a new model, the build method will be invoked. It requires the input data’s shape and the number of classes as arguments. With MNIST, the shape parameter will be 28*28*1 = 784,while the number of classes will be 10.\n\nNow is the time to define an optimizer, loss function and metrics to compile our models with later on.","metadata":{}},{"cell_type":"code","source":"lr = 0.01 \ncomms_round = 100\nloss='categorical_crossentropy'\nmetrics = ['accuracy']\noptimizer = SGD(learning_rate=lr, \n                decay=lr / comms_round, \n                momentum=0.9\n               )    \n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:35:43.026402Z","iopub.execute_input":"2024-08-04T05:35:43.026815Z","iopub.status.idle":"2024-08-04T05:35:43.036796Z","shell.execute_reply.started":"2024-08-04T05:35:43.026781Z","shell.execute_reply":"2024-08-04T05:35:43.035884Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"markdown","source":"# Model Aggregation (Federated Averaging)\nAll I have done up to this point was pretty much standard as per deep learning pipeline. Of course with the exception of the data partitioning or client creation bit. I will now move on to Federated Averaging ( the vanilla algorithm for FL) which is the whole point of the this tutorial. The data I’m using is horizontally partitioned, so I will simply be doing component wise parameter averaging which will be weighed based on the proportion of data points contributed by each participating client. Here’s the federated averaging equation I’m using, it comes one of the pioneering works on federated learning [2].","metadata":{}},{"cell_type":"markdown","source":"![image.png](attachment:18baeeda-fa5c-4fb6-bed5-b3abc47d10f3.png)![image.png](attachment:5d054789-a4dc-4916-8ea1-ce4de1ef40eb.png)","metadata":{},"attachments":{"18baeeda-fa5c-4fb6-bed5-b3abc47d10f3.png":{"image/png":"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"},"5d054789-a4dc-4916-8ea1-ce4de1ef40eb.png":{"image/png":""}}},{"cell_type":"markdown","source":"Don’t let the complex mathematical notations in the equation fool you, this is a pretty straight forward computation. On the right hand side, we are estimating the weight parameters for each client based on the loss values recorded across every data point they trained with. On the left, we scaled each of those parameters and sum them all component-wise.\n\nBelow I have encapsulated this procedure into three simple functions.","metadata":{}},{"cell_type":"code","source":"def weight_scalling_factor(clients_trn_data, client_name):\n    client_names = list(clients_trn_data.keys())\n    #get the bs\n    bs = list(clients_trn_data[client_name])[0][0].shape[0]\n    #first calculate the total training data points across clinets\n    global_count = sum([tf.data.experimental.cardinality(clients_trn_data[client_name]).numpy() for client_name in client_names])*bs\n    # get the total number of data points held by a client\n    local_count = tf.data.experimental.cardinality(clients_trn_data[client_name]).numpy()*bs\n    return local_count/global_count\n\n\ndef scale_model_weights(weight, scalar):\n    '''function for scaling a models weights'''\n    weight_final = []\n    steps = len(weight)\n    for i in range(steps):\n        weight_final.append(scalar * weight[i])\n    return weight_final\n\n\n\ndef sum_scaled_weights(scaled_weight_list):\n    '''Return the sum of the listed scaled weights. The is equivalent to scaled avg of the weights'''\n    avg_grad = list()\n    #get the average grad accross all client gradients\n    for grad_list_tuple in zip(*scaled_weight_list):\n        layer_mean = tf.math.reduce_sum(grad_list_tuple, axis=0)\n        avg_grad.append(layer_mean)\n        \n    return avg_grad\n\n\ndef test_model(X_test, Y_test,  model, comm_round):\n    cce = tf.keras.losses.CategoricalCrossentropy(from_logits=True)\n    #logits = model.predict(X_test, batch_size=100)\n    logits = model.predict(X_test)\n    loss = cce(Y_test, logits)\n    acc = accuracy_score(tf.argmax(logits, axis=1), tf.argmax(Y_test, axis=1))\n    print('comm_round: {} | global_acc: {:.3%} | global_loss: {}'.format(comm_round, acc, loss))\n    return acc, loss","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:27:53.140038Z","iopub.execute_input":"2024-08-04T05:27:53.140624Z","iopub.status.idle":"2024-08-04T05:27:53.150808Z","shell.execute_reply.started":"2024-08-04T05:27:53.140594Z","shell.execute_reply":"2024-08-04T05:27:53.149740Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"markdown","source":"(1) weight_scalling_factor calculates the proportion of a client’s local training data with the overall training data held by all clients. First we obtained the client’s batch size and used that to calculate its number of data points. We then obtained the overall global training data size on line 6. Finally we calculated the scaling factor as a fraction on line 9. This sure can’t be the approach in a real world application. The training data will be disjointed, therefore no single client can correctly estimate the quantity of the combined set. In that case, each client will be expected to indicate the number of data points they trained with while updating the server with new parameters after each local training step.\n\n(2) scale_model_weights scales each of the local model’s weights based the value of their scaling factor calculated in (1)\n\n(3) sum_scaled_weights sums all clients’ scaled weights together.","metadata":{}},{"cell_type":"markdown","source":"# Federated Model Training\n","metadata":{}},{"cell_type":"code","source":"#initialize global model\nsmlp_global = SimpleMLP()\nglobal_model = smlp_global.build(784, 10)\n        \n#commence global training loop\nfor comm_round in range(comms_round):\n            \n    # get the global model's weights - will serve as the initial weights for all local models\n    global_weights = global_model.get_weights()\n    \n    #initial list to collect local model weights after scalling\n    scaled_local_weight_list = list()\n\n    #randomize client data - using keys\n    client_names= list(clients_batched.keys())\n    random.shuffle(client_names)\n    \n    #loop through each client and create new local model\n    for client in client_names:\n        smlp_local = SimpleMLP()\n        local_model = smlp_local.build(784, 10)\n        optimizer = SGD(learning_rate=0.01)\n\n        local_model.compile(loss=loss, \n                      optimizer=optimizer, \n                      metrics=metrics)\n        \n        #set local model weight to the weight of the global model\n        local_model.set_weights(global_weights)\n        \n        #fit local model with client's data\n        local_model.fit(clients_batched[client], epochs=1, verbose=0)\n        \n        #scale the model weights and add to list\n        scaling_factor = weight_scalling_factor(clients_batched, client)\n        scaled_weights = scale_model_weights(local_model.get_weights(), scaling_factor)\n        scaled_local_weight_list.append(scaled_weights)\n        \n        #clear session to free memory after each communication round\n        K.clear_session()\n        \n    #to get the average over all the local model, we simply take the sum of the scaled weights\n    average_weights = sum_scaled_weights(scaled_local_weight_list)\n    \n    #update global model \n    global_model.set_weights(average_weights)\n\n    #test global model and print out metrics after each communications round\n    for(X_test, Y_test) in test_batched:\n        global_acc, global_loss = test_model(X_test, Y_test, global_model, comm_round)\n        \n        \n        ","metadata":{"execution":{"iopub.status.busy":"2024-08-04T05:38:00.291191Z","iopub.execute_input":"2024-08-04T05:38:00.291576Z","iopub.status.idle":"2024-08-04T06:18:09.722129Z","shell.execute_reply.started":"2024-08-04T05:38:00.291545Z","shell.execute_reply":"2024-08-04T06:18:09.721136Z"},"trusted":true},"execution_count":28,"outputs":[{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 220ms/step\ncomm_round: 0 | global_acc: 5.000% | global_loss: 2.306586503982544\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 1 | global_acc: 6.667% | global_loss: 2.3055765628814697\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 2 | global_acc: 6.667% | global_loss: 2.3045594692230225\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 3 | global_acc: 6.667% | global_loss: 2.3035216331481934\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 4 | global_acc: 8.333% | global_loss: 2.302520275115967\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 5 | global_acc: 8.333% | global_loss: 2.3014743328094482\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 6 | global_acc: 8.333% | global_loss: 2.3004255294799805\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 7 | global_acc: 8.333% | global_loss: 2.2993276119232178\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step\ncomm_round: 8 | global_acc: 8.333% | global_loss: 2.298231601715088\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 9 | global_acc: 8.333% | global_loss: 2.297149658203125\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 10 | global_acc: 13.333% | global_loss: 2.295992851257324\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step\ncomm_round: 11 | global_acc: 16.667% | global_loss: 2.2948598861694336\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 12 | global_acc: 16.667% | global_loss: 2.293741464614868\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 13 | global_acc: 18.333% | global_loss: 2.2926106452941895\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 14 | global_acc: 18.333% | global_loss: 2.2914679050445557\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 15 | global_acc: 18.333% | global_loss: 2.2902817726135254\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 16 | global_acc: 21.667% | global_loss: 2.2890353202819824\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\ncomm_round: 17 | global_acc: 23.333% | global_loss: 2.287778615951538\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 18 | global_acc: 25.000% | global_loss: 2.286480665206909\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 19 | global_acc: 25.000% | global_loss: 2.285162925720215\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 20 | global_acc: 26.667% | global_loss: 2.283803701400757\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 21 | global_acc: 28.333% | global_loss: 2.2824392318725586\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 22 | global_acc: 30.000% | global_loss: 2.280968189239502\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 23 | global_acc: 30.000% | global_loss: 2.2795212268829346\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 24 | global_acc: 33.333% | global_loss: 2.278008460998535\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 25 | global_acc: 35.000% | global_loss: 2.276517152786255\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 26 | global_acc: 36.667% | global_loss: 2.2749714851379395\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 27 | global_acc: 38.333% | global_loss: 2.2733967304229736\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 28 | global_acc: 40.000% | global_loss: 2.2717981338500977\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 29 | global_acc: 41.667% | global_loss: 2.2701261043548584\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 30 | global_acc: 43.333% | global_loss: 2.268561840057373\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 31 | global_acc: 43.333% | global_loss: 2.2668564319610596\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 32 | global_acc: 43.333% | global_loss: 2.2651875019073486\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 33 | global_acc: 43.333% | global_loss: 2.263432025909424\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step\ncomm_round: 34 | global_acc: 45.000% | global_loss: 2.261698007583618\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 35 | global_acc: 50.000% | global_loss: 2.25986385345459\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 36 | global_acc: 50.000% | global_loss: 2.2580199241638184\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 37 | global_acc: 50.000% | global_loss: 2.256056547164917\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 38 | global_acc: 50.000% | global_loss: 2.254093647003174\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 39 | global_acc: 53.333% | global_loss: 2.252171039581299\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 40 | global_acc: 53.333% | global_loss: 2.2501182556152344\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 41 | global_acc: 53.333% | global_loss: 2.248051643371582\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 42 | global_acc: 55.000% | global_loss: 2.2460319995880127\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 43 | global_acc: 55.000% | global_loss: 2.243882179260254\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 44 | global_acc: 55.000% | global_loss: 2.241828203201294\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 45 | global_acc: 55.000% | global_loss: 2.2396914958953857\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 46 | global_acc: 56.667% | global_loss: 2.237555980682373\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 47 | global_acc: 56.667% | global_loss: 2.235487222671509\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 18ms/step\ncomm_round: 48 | global_acc: 56.667% | global_loss: 2.2333180904388428\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 49 | global_acc: 56.667% | global_loss: 2.2311110496520996\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 50 | global_acc: 56.667% | global_loss: 2.2289443016052246\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 51 | global_acc: 56.667% | global_loss: 2.2266499996185303\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 52 | global_acc: 56.667% | global_loss: 2.2243428230285645\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 53 | global_acc: 58.333% | global_loss: 2.221970796585083\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 54 | global_acc: 58.333% | global_loss: 2.2196452617645264\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 55 | global_acc: 60.000% | global_loss: 2.2172691822052\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 56 | global_acc: 60.000% | global_loss: 2.214721202850342\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 57 | global_acc: 60.000% | global_loss: 2.2122695446014404\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 58 | global_acc: 61.667% | global_loss: 2.2096078395843506\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 59 | global_acc: 61.667% | global_loss: 2.20719051361084\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 60 | global_acc: 61.667% | global_loss: 2.2045741081237793\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 61 | global_acc: 65.000% | global_loss: 2.201904773712158\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 62 | global_acc: 63.333% | global_loss: 2.1991963386535645\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 63 | global_acc: 65.000% | global_loss: 2.196747064590454\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 64 | global_acc: 65.000% | global_loss: 2.194204092025757\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 65 | global_acc: 65.000% | global_loss: 2.191572904586792\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 66 | global_acc: 65.000% | global_loss: 2.1887495517730713\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 67 | global_acc: 66.667% | global_loss: 2.1859848499298096\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 68 | global_acc: 66.667% | global_loss: 2.1831538677215576\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 69 | global_acc: 66.667% | global_loss: 2.1806435585021973\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 70 | global_acc: 66.667% | global_loss: 2.1779398918151855\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step\ncomm_round: 71 | global_acc: 66.667% | global_loss: 2.1751160621643066\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 72 | global_acc: 66.667% | global_loss: 2.172211170196533\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 73 | global_acc: 66.667% | global_loss: 2.1694605350494385\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 74 | global_acc: 66.667% | global_loss: 2.1664700508117676\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 75 | global_acc: 66.667% | global_loss: 2.163738965988159\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 76 | global_acc: 66.667% | global_loss: 2.160896062850952\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 23ms/step\ncomm_round: 77 | global_acc: 68.333% | global_loss: 2.1578171253204346\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\ncomm_round: 78 | global_acc: 68.333% | global_loss: 2.1549322605133057\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 79 | global_acc: 70.000% | global_loss: 2.152045726776123\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 80 | global_acc: 70.000% | global_loss: 2.1492462158203125\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 81 | global_acc: 70.000% | global_loss: 2.146369457244873\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 82 | global_acc: 70.000% | global_loss: 2.143559217453003\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 83 | global_acc: 70.000% | global_loss: 2.140815258026123\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 84 | global_acc: 70.000% | global_loss: 2.137986183166504\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 85 | global_acc: 71.667% | global_loss: 2.1349923610687256\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 86 | global_acc: 70.000% | global_loss: 2.1320512294769287\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 87 | global_acc: 71.667% | global_loss: 2.129153251647949\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 88 | global_acc: 71.667% | global_loss: 2.126311779022217\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 89 | global_acc: 71.667% | global_loss: 2.123675584793091\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 90 | global_acc: 70.000% | global_loss: 2.1209776401519775\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 15ms/step\ncomm_round: 91 | global_acc: 73.333% | global_loss: 2.117661237716675\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step\ncomm_round: 92 | global_acc: 73.333% | global_loss: 2.114812135696411\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 93 | global_acc: 71.667% | global_loss: 2.112278938293457\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 94 | global_acc: 73.333% | global_loss: 2.109377145767212\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 95 | global_acc: 73.333% | global_loss: 2.106628179550171\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 96 | global_acc: 73.333% | global_loss: 2.1038293838500977\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 97 | global_acc: 71.667% | global_loss: 2.10115122795105\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 98 | global_acc: 71.667% | global_loss: 2.0984628200531006\n","output_type":"stream"},{"name":"stderr","text":"/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/dense.py:87: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m2/2\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 16ms/step\ncomm_round: 99 | global_acc: 71.667% | global_loss: 2.0958147048950195\n","output_type":"stream"}]},{"cell_type":"code","source":"def test_model(X_test, Y_test,  model, comm_round):\n    cce = tf.keras.losses.CategoricalCrossentropy(from_logits=True)\n    #logits = model.predict(X_test, batch_size=100)\n    logits = model.predict(X_test)\n    loss = cce(Y_test, logits)\n    acc = accuracy_score(tf.argmax(logits, axis=1), tf.argmax(Y_test, axis=1))\n    print('comm_round: {} | global_acc: {:.3%} | global_loss: {}'.format(comm_round, acc, loss))\n    return acc, loss","metadata":{"execution":{"iopub.status.busy":"2024-08-03T11:34:54.452896Z","iopub.status.idle":"2024-08-03T11:34:54.453360Z","shell.execute_reply.started":"2024-08-03T11:34:54.453130Z","shell.execute_reply":"2024-08-03T11:34:54.453149Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# SGD Vs Federated Averaging\nYes, our FL model results are great, 96.5% test accuracy after 100 communication rounds. But how does it compare to a standard SGD model trained on the same data set? To find out, I’ll train a single 3-layer MLP model (rather 10 as we did in FL) on the combined training data. Remember the combined data was our training data prior to partitioning.\n\nTo ensure an equal playing ground, I will retain every hyper parameter used for the FL training except the batch size. Rather than using 32 , our SGD’s batch size will be 320. With this setting, we are sure that the SGD model would see exactly the same number of training samples per epoch as the global model did per communication round in FL","metadata":{}},{"cell_type":"code","source":"SGD_dataset = tf.data.Dataset.from_tensor_slices((X_train, y_train)).shuffle(len(y_train)).batch(320)\nsmlp_SGD = SimpleMLP()\nSGD_model = smlp_SGD.build(784, 10) \n\nSGD_model.compile(loss=loss, \n              optimizer=optimizer, \n              metrics=metrics)\n\n# fit the SGD training data to model\n_ = SGD_model.fit(SGD_dataset, epochs=100, verbose=0)\n\n#test the SGD global model and print out metrics\nfor(X_test, Y_test) in test_batched:\n        SGD_acc, SGD_loss = test_model(X_test, Y_test, SGD_model, 1)","metadata":{"execution":{"iopub.status.busy":"2024-08-03T11:34:54.454719Z","iopub.status.idle":"2024-08-03T11:34:54.455090Z","shell.execute_reply.started":"2024-08-03T11:34:54.454884Z","shell.execute_reply":"2024-08-03T11:34:54.454898Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There you have it, a 94.5% test accuracy for the SGD model after 100 epochs. Isn’t it surprising that the FL performed a little better than its SGD counterpart with this data set? I warn you not to get too excited about this though. These kind of results are not likely in real world scenario. Yeah! Real world federated data held by clients are mostly NON independent and identically distributed (IID).\n\nFor example, we could have replicated this scenario by constructing our client shards above such that each comprises of images from a single class — e.g client_1 having only images of digit 1, client_2 having only images of digit 2 and so on. This arrangement would have lead to a significant reduction in the performance of the FL model. I leave this as an exercise for the reader to try out. Meanwhile, here is the code you could use to shard any classification data in a non-IID manner.","metadata":{}},{"cell_type":"code","source":"def non_iid_x(image_list, label_list, x=1, num_intraclass_clients=10):\n        ''' creates x non_IID clients\n        args: \n            image_list: python list of images or data points\n            label_list: python list of labels\n            x: none IID severity, 1 means each client will only have one class of data\n            num_intraclass_client: number of sub-client to be created from each none IID class,\n            e.g for x=1, we could create 10 further clients by splitting each class into 10\n            \n        return - dictionary \n            keys - clients's name, \n            value - client's non iid 1 data shard (as tuple list of images and labels) '''\n        \n        non_iid_x_clients = dict()\n        \n        #create unique label list and shuffle\n        unique_labels = np.unique(np.array(label_list))\n        random.shuffle(unique_labels)\n        \n        #create sub label lists based on x\n        sub_lab_list = [unique_labels[i:i + x] for i in range(0, len(unique_labels), x)]\n            \n        for item in sub_lab_list:\n            class_data = [(image, label) for (image, label) in zip(image_list, label_list) if label in item]\n            \n            #decouple tuple list into seperate image and label lists\n            images, labels = zip(*class_data)\n            \n            # create formated client initials\n            initial = ''\n            for lab in item:\n                initial = initial + lab + '_'\n            \n            #create num_intraclass_clients clients from the class \n            intraclass_clients = create_clients(list(images), list(labels), num_intraclass_clients, initial)\n            \n            #append intraclass clients to main clients'dict\n            non_iid_x_clients.update(intraclass_clients)\n        \n        return non_iid_x_clients","metadata":{"execution":{"iopub.status.busy":"2024-08-03T11:34:54.456759Z","iopub.status.idle":"2024-08-03T11:34:54.457114Z","shell.execute_reply.started":"2024-08-03T11:34:54.456912Z","shell.execute_reply":"2024-08-03T11:34:54.456924Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Conclusion","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"markdown","source":"Through this article, I introduced the concept of Federated Learning and took you through the tensorflow implementation of it basic form. I encourage you to check my recent article on LinkedIn here for broader introduction of this technology, particularly if you are not clear about its workings or want to learn more about how it could be applied. For researchers wanting to study this subject in more depth, there are lots of journals around FL on arxiv.org/cs , mostly pushing boundaries on its implementation and addressing its numerous challenges.\n\nReference\n[1] Federated Learning with Non-IID Data, Yue Zhao et al, arXiv: 1806.00582v1, 2 Jun 2018\n\n\n[2] Communication-Efficient Learning of Deep Networks from Decentralized Data, H. Brendan McMahan et al, arXiv:1602.05629v3 [cs.LG] 28 Feb 2017\n\n\n\n\n[i followed this tutorial](https://towardsdatascience.com/federated-learning-a-step-by-step-implementation-in-tensorflow-aac568283399)","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}